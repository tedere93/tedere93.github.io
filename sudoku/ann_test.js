//------------------------------------------------------------
function logistic_function(x)
{
	return 1 / (1 + Math.exp(-x));
}
//------------------------------------------------------------
function test_ann(test_data, out_last_layer)
{
	// allocate memory for out
	var out = [];
	for (var i = 0; i < num_layers - 1; i++)
		out[i] = new Array(num_neurons[i] + 1);
	out[num_layers - 1] = new Array(num_neurons[num_layers - 1]);
	
// first set the value of bias nodes to 1
	for (var layer = 0; layer < num_layers - 1; layer++)
		out[layer][num_neurons[layer]] = 1;

	// set input data
	for (var input = 0; input < num_neurons[0]; input++)
		out[0][input] = test_data[input];
	// compute out for each other layer
	for (var layer = 1; layer < num_layers; layer++) {
		for (var n2 = 0; n2 < num_neurons[layer]; n2++) {
			out[layer][n2] = 0;
			for (var w = 0; w < num_neurons[layer - 1] + 1; w++)
				out[layer][n2] += weights[layer - 1][n2][w] * out[layer - 1][w];
			out[layer][n2] = logistic_function(out[layer][n2]);
		}
	}
	var max_out_value = -1;
	var class_index = -1;
	for (var neuron = 0; neuron < num_neurons[num_layers - 1]; neuron++) {
		out_last_layer[neuron] = out[num_layers - 1][neuron];
		if (max_out_value < out_last_layer[neuron]) {
			class_index = neuron;
			max_out_value = out_last_layer[neuron];
		}
	}
	return class_index;	
}
//------------------------------------------------------------
//var input
//var out_last_layer = [];
//var class_index = test_ann(input, out_last_layer);

//console.log(class_index);
//------------------------------------------------------------